name: Release Charts
on:
  push:
    branches:
      - main
      - fix-chart-releaser
    paths:
      - 'charts/**'

jobs:
  release-charts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      
      - name: Install Helm
        uses: azure/setup-helm@v3
      
      - name: Add Helm repos
        run: |
          # Add commonly used Helm repositories
          helm repo add stable https://charts.helm.sh/stable
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add jetstack https://charts.jetstack.io
          helm repo update
      
      - name: Install chart-releaser
        run: |
          mkdir -p .cr-release-packages
          curl -sSLo cr.tar.gz "https://github.com/helm/chart-releaser/releases/download/v1.6.0/chart-releaser_1.6.0_linux_amd64.tar.gz"
          tar -xzf cr.tar.gz
          chmod +x cr
          sudo mv cr /usr/local/bin/cr
      
      - name: Debug file changes
        run: |
          echo "Changed files:"
          git diff --name-only HEAD~1 HEAD
      
      - name: Check for chart changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          base: 'HEAD~1'  # Compare with previous commit
          filters: |
            guard:
              - 'charts/guard/**'
              - '!charts/watch/**'
              - '!charts/path/**'
            watch:
              - 'charts/watch/**'
              - '!charts/guard/**'
              - '!charts/path/**'
            path:
              - 'charts/path/**'
              - '!charts/guard/**'
              - '!charts/watch/**'
      
      - name: Debug chart changes
        run: |
          echo "Guard changed: ${{ steps.filter.outputs.guard }}"
          echo "Watch changed: ${{ steps.filter.outputs.watch }}"
          echo "Path changed: ${{ steps.filter.outputs.path }}"
      
      # Download existing index file if it exists
      - name: Prepare index
        run: |
          # Try to download existing index.yaml if it exists
          mkdir -p .cr-index
          curl -sSfL -o .cr-index/index.yaml https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/index.yaml || true
          # If download failed, create a new empty index
          if [ ! -f .cr-index/index.yaml ]; then
            echo "Creating new index.yaml"
            echo "apiVersion: v1" > .cr-index/index.yaml
            echo "entries: {}" >> .cr-index/index.yaml
            echo "generated: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> .cr-index/index.yaml
          fi
      
      # Create temporary local Helm repo for inter-chart dependencies
      - name: Setup local Helm repo
        run: |
          mkdir -p .cr-local-repo
          echo "apiVersion: v1" > .cr-local-repo/index.yaml
          echo "entries: {}" >> .cr-local-repo/index.yaml
          echo "generated: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> .cr-local-repo/index.yaml
          helm repo add local-repo file://$(pwd)/.cr-local-repo
      
      # Process charts sequentially, checking for dependencies
      # The order here matters if charts depend on each other
      # Process guard chart first (assuming it's a base chart)
      - name: Process guard chart
        if: steps.filter.outputs.guard == 'true'
        run: |
          echo "Processing guard chart..."
          
          # Create release directory
          mkdir -p .cr-release-packages
          
          # Build dependencies and package
          helm dependency build charts/guard
          helm package charts/guard -d .cr-release-packages
          
          # Add to local repo for other charts to reference
          helm repo index .cr-release-packages --url file://$(pwd)/.cr-release-packages --merge .cr-local-repo/index.yaml
          cp .cr-release-packages/index.yaml .cr-local-repo/
          helm repo update
      
      # Process watch chart second (may depend on guard)
      - name: Process watch chart
        if: steps.filter.outputs.watch == 'true'
        run: |
          echo "Processing watch chart..."
          
          # Check if chart has local dependencies and update them
          if grep -q "repository: file://" charts/watch/Chart.yaml; then
            echo "Updating local dependencies..."
            sed -i 's|repository: file://.*|repository: "file://$(pwd)/.cr-local-repo"|g' charts/watch/Chart.yaml
          fi
          
          # Build dependencies and package
          helm dependency update charts/watch
          helm package charts/watch -d .cr-release-packages
          
          # Add to local repo for other charts to reference
          helm repo index .cr-release-packages --url file://$(pwd)/.cr-release-packages --merge .cr-local-repo/index.yaml
          cp .cr-release-packages/index.yaml .cr-local-repo/
          helm repo update
      
      # Process path chart last (may depend on guard or watch)
      - name: Process path chart
        if: steps.filter.outputs.path == 'true'
        run: |
          echo "Processing path chart..."
          
          # Check if chart has local dependencies and update them
          if grep -q "repository: file://" charts/path/Chart.yaml; then
            echo "Updating local dependencies..."
            sed -i 's|repository: file://.*|repository: "file://$(pwd)/.cr-local-repo"|g' charts/path/Chart.yaml
          fi
          
          # Build dependencies and package
          helm dependency update charts/path
          helm package charts/path -d .cr-release-packages
      
      # Upload all packaged charts at once
      - name: Upload charts
        if: steps.filter.outputs.guard == 'true' || steps.filter.outputs.watch == 'true' || steps.filter.outputs.path == 'true'
        run: |
          if [ -n "$(ls -A .cr-release-packages)" ]; then
            echo "Uploading packaged charts..."
            cr upload -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -p .cr-release-packages --token "${{ secrets.GITHUB_TOKEN }}" --skip-existing
          else
            echo "No charts to upload"
          fi
      
      # Update the index file once
      - name: Update and push index
        if: steps.filter.outputs.guard == 'true' || steps.filter.outputs.watch == 'true' || steps.filter.outputs.path == 'true'
        run: |
          cr index -o "${{ github.repository_owner }}" -r "${{ github.event.repository.name }}" -p .cr-release-packages -c https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/ -i .cr-index/index.yaml
          
          # Setup pages branch if it doesn't exist
          git fetch origin gh-pages || git branch gh-pages
          
          # Checkout gh-pages branch
          git checkout gh-pages || (git checkout --orphan gh-pages && git rm -rf . && git clean -fxd)
          
          # Copy the updated index to the root and commit
          cp .cr-index/index.yaml .
          
          # Add, commit and push if there are changes
          git add index.yaml
          git diff --staged --quiet || (git commit -m "Update Helm chart index" && git push origin gh-pages)
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
